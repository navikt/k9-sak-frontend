name: Deploy Docker image
on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'CODEOWNERS'
    branches:
      - master
env:
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/k9-sak-web
  CLUSTER: dev-fss
  NAMESPACE: default
jobs:
  deploy-docker-image:
    name: Deploy Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Hente kode
        uses: actions/checkout@v2.3.2
      - name: Sette opp Node
        uses: actions/setup-node@v2.1.1
        with:
          node-version: 12.x
      - name: Get yarn cache
        id: yarn-cache
        run: |
          echo "::set-output name=dir::$(yarn cache dir)"
          echo "::set-env name=TAG::$(date +"%Y%m%d%H%M%S")-$(echo $GITHUB_SHA | cut -c1-7)"
      - name: Cache node modules
        uses: actions/cache@v1.1.0
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Installere dependencies
        run: yarn install --ignore-optional --no-progress --frozen-lockfile
      - name: Tester, typescript-sjekk og linting
        run: yarn test && yarn ts-check && yarn less:lint
      - name: Bygge dist
        run: yarn build
      - name: Sette Docker-navn og -tag
        run: |
          echo "::set-env name=IMAGE::$IMAGE_BASE:$TAG"
      - name: Bygg og laste opp docker-image
        run: |
          docker pull nginx:1.17.8-alpine
          docker build --tag ${IMAGE} --tag ${IMAGE_BASE}:latest .
          echo "$GITHUB_TOKEN" | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          docker push ${IMAGE_BASE}:latest
          docker push ${IMAGE}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Opprett deployment issue
        if: success()
        uses: maxkomarychev/oction-create-issue@v0.7.1
        id: createdeployissue
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Deploy av ${{ env.TAG }}
          labels: deployment
          body: |
            Kommenter med <b>/promote cluster namespace</b>, hvor <b>cluster</b> er et gyldig clusternavn og <b>namespace</b> et eksisterende namespace i det clusteret.
            <table>
            <tr><th>Cluster</th><th>Namespace</th></tr>
            <tr><td>dev-fss</td><td>default</td></tr>
            <tr><td>prod-fss</td><td>default</td></tr>
            </table>

      - name: Trigger verdikjede test
        if: success()
        shell: bash
        run: |
          curl -XPOST -u "x-access-token:${{secrets.GA_P_TOKEN}}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          https://api.github.com/repos/navikt/k9-verdikjede/dispatches \
          --data '{"event_type": "saksbehandling-verdikjede",
                   "client_payload": {
                      "trigger": "${{ github.repository }}",
                      "version": "${{ env.TAG }}",
                      "image": "${{ env.IMAGE }}"
                  }}'

      - name: Trigg deploy til dev-fss
        if: success()
        uses: actions/github-script@v2.0.1
        with:
          github-token: ${{secrets.GA_P_TOKEN}}
          script: |
            const issue = { owner: context.issue.owner,
                            repo: context.issue.repo,
                            issue_number: ${{ steps.createdeployissue.outputs.number }} }
            github.issues.createComment({...issue,
                                    title: 'Deploy av ${{ env.TAG }}',
                                    body: '/promote ${{ env.CLUSTER }} ${{ env.NAMESPACE }}'})
